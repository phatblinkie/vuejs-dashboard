
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

worker_processes  auto;

pid        /run/nginx/nginx.pid;
error_log  /dev/stdout error;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
#include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    log_format  main  '"$time_local" client=$remote_addr '
                      'method=$request_method request="$request" '
                      'request_length=$request_length '
                      'status=$status bytes_sent=$bytes_sent '
                      'body_bytes_sent=$body_bytes_sent '
                      'referer=$http_referer '
                      'user_agent="$http_user_agent" '
                      'upstream_addr=$upstream_addr '
                      'upstream_status=$upstream_status '
                      'request_time=$request_time '
                      'upstream_response_time=$upstream_response_time '
                      'upstream_connect_time=$upstream_connect_time '
                      'upstream_header_time=$upstream_header_time '
                      'request_id="$http_x_request_id"';


    access_log  /dev/stdout  main;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    types_hash_max_size 4096;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    #include /etc/nginx/conf.d/*.conf;

    server {
        listen 9443 default_server ssl http2;
        listen [::]:9443 default_server ssl http2;

        # If you have a domain name, this is where to add it
        server_name _;
        keepalive_timeout 65;

        # The default client_max_body_size is 1m. Clients uploading
        # files larger than this will need to chunk said files.
        client_max_body_size 5m;

        ssl_certificate /etc/tower/tower.cert;
        ssl_certificate_key /etc/tower/tower.key;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        # RHEL system crypto policy
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required, max-age in seconds)
        add_header Strict-Transport-Security max-age=63072000;

        # headers added with controller_nginx_user_headers variable
        # end of headers added with controller_nginx_user_headers variable

        # Protect against click-jacking https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009)
        add_header X-Frame-Options "DENY";
        # Protect against MIME content sniffing https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
        add_header X-Content-Type-Options nosniff;

        gzip on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/css text/javascript text/plain text/xml application/javascript application/json application/xml;
        gzip_vary on;

        location /favicon.ico {
            alias /var/lib/awx/public/static/media/favicon.ico;
            expires 1d;
        }
        #location /static {
        #    alias /var/lib/awx/public/static;
        #    expires 1d;
        #}
        root /var/www/html;;

        location / {
            # Redirect if there is no forward-slash
            rewrite ^(.*)$http_host(.*[^/])$ $1$http_host$2/ permanent;

            if ($http_x_forwarded_proto = "http") {
            rewrite ^ https://$host$request_uri? permanent;
            }

            # Protect against click-jacking https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009)
            add_header X-Frame-Options "DENY";
            add_header X-Content-Type-Options nosniff;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Expires "0";
            add_header Pragma "no-cache";
        }

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host:9443$request_uri;
    }
}
